name: build

env:
  GRADLE_OPTS: "-Dorg.gradle.jvmargs=-Xmx4g -Dorg.gradle.daemon=false -Dkotlin.incremental=false"

on:
  push:
    branches: [ master ]
    paths-ignore: [ '**.md' ]

  pull_request:
    paths-ignore: [ '**.md' ]

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.properties.outputs.version }}
      changelog: ${{ steps.properties.outputs.changelog }}

    steps:
      - name: Fetch Sources
        uses: actions/checkout@v5

      - name: Set up a JDK
        uses: actions/setup-java@v5
        with:
          java-version: 21
          distribution: zulu

      - name: Validate Gradle Wrapper
        uses: gradle/actions/wrapper-validation@v5

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v5

      - name: Export Properties
        id: properties
        shell: bash
        run: |
          PROPERTIES="$(./gradlew properties --console=plain -q)"
          VERSION="$(echo "$PROPERTIES" | grep "^version:" | cut -f2- -d ' ')"
          CHANGELOG="$(./gradlew getChangelog --unreleased --no-header --console=plain -q)"
          CHANGELOG="${CHANGELOG//'%'/'%25'}"
          CHANGELOG="${CHANGELOG//$'\n'/'%0A'}"
          CHANGELOG="${CHANGELOG//$'\r'/'%0D'}"
          echo "::set-output name=version::$VERSION"
          echo "::set-output name=changelog::$CHANGELOG"

      - name: Run checks
        run: ./gradlew check

      - name: Archive lint results
        uses: actions/upload-artifact@v5
        with:
          name: checks lint results
          path: checks/build/reports/lint-results.html

      - name: Archive test results
        uses: actions/upload-artifact@v5
        with:
          name: checks test results
          path: checks/build/reports/tests/test

      - name: Assemble
        run: ./gradlew assemble

      - name: Archive checks.jar
        uses: actions/upload-artifact@v5
        with:
          name: checks.aar
          path: checks/build/libs/checks.jar

  # Prepare a draft release for GitHub Releases page for the manual verification
  # If accepted and published, release workflow would be triggered
  releaseDraft:
    name: Release Draft
    if: github.event_name != 'pull_request'
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      # Check out current repository
      - name: Fetch Sources
        uses: actions/checkout@v5

      # Remove old release drafts by using the curl request for the available releases with draft flag
      - name: Remove Old Release Drafts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh api repos/{owner}/{repo}/releases \
            --jq '.[] | select(.draft == true) | .id' \
            | xargs -I '{}' gh api -X DELETE repos/{owner}/{repo}/releases/{}

      # Create new release draft - which is not publicly visible and requires manual acceptance
      - name: Create Release Draft
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create v${{ needs.build.outputs.version }} \
            --draft \
            --title "v${{ needs.build.outputs.version }}" \
            --notes "$(cat << 'EOM'
          ${{ needs.build.outputs.changelog }}
          EOM
          )"
